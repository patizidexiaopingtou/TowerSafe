# Copyright (C) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

services_path = "//foundation/barrierfree/accessibility/services/aams"

ohos_prebuilt_etc("accessibility_service.rc") {
  source = "etc/accessibility_service.rc"
  relative_install_dir = "init"
  part_name = "accessibility"
  subsystem_name = "barrierfree"
}

config("aams_service_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "include",
    "//base/powermgr/power_manager/interfaces/innerkits/native/include",
    "//foundation/barrierfree/accessibility/common/log/include",
  ]

  defines = [
    "AAMS_LOG_TAG = \"accessibility\"",
    "AAMS_LOG_DOMAIN = 0xD001D00",
  ]
}

accessibleabilityms_files = [
  "${services_path}/src/accessible_ability_channel.cpp",
  "${services_path}/src/accessible_ability_connection.cpp",
  "${services_path}/src/accessible_ability_manager_service_event_handler.cpp",
  "${services_path}/src/accessible_ability_manager_service.cpp",
  "${services_path}/src/accessibility_account_data.cpp",
  "${services_path}/src/accessibility_settings_config.cpp",
  "${services_path}/src/accessibility_window_connection.cpp",
  "${services_path}/src/accessibility_zoom_gesture.cpp",
  "${services_path}/src/accessibility_common_event.cpp",
  "${services_path}/src/accessibility_touch_guider.cpp",
  "${services_path}/src/accessibility_gesture_recognizer.cpp",
  "${services_path}/src/accessibility_event_transmission.cpp",
  "${services_path}/src/accessibility_input_interceptor.cpp",
  "${services_path}/src/accessibility_touchEvent_injector.cpp",
  "${services_path}/src/accessibility_keyevent_filter.cpp",
  "${services_path}/src/accessibility_mouse_autoclick.cpp",
  "${services_path}/src/accessibility_mouse_key.cpp",
  "${services_path}/src/accessibility_short_key.cpp",
  "${services_path}/src/accessibility_window_manager.cpp",
  "${services_path}/src/accessibility_display_manager.cpp",
  "${services_path}/src/utils.cpp",
  "${services_path}/src/accessibility_dumper.cpp",
]

ohos_shared_library("accessibleabilityms") {
  sources = accessibleabilityms_files
  configs = [
    ":aams_service_config",
    "//foundation/barrierfree/accessibility/resources/config/build:coverage_flags",
  ]

  deps = [
    "//foundation/barrierfree/accessibility/common/interface:accessibility_interface",
    "//foundation/barrierfree/accessibility/interfaces/innerkits/common:accessibility_common",
  ]

  external_deps = [
    "ability_base:want",
    "ability_runtime:ability_manager",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "display_manager:displaymgr",
    "eventhandler:libeventhandler",
    "hisysevent_native:libhisysevent",
    "hitrace_native:hitrace_meter",
    "hiviewdfx_hilog_native:libhilog",
    "init:libbegetutil",
    "input:libmmi-client",
    "ipc:ipc_core",
    "os_account:os_account_innerkits",
    "preferences:native_preferences",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "window_manager:libdm",
    "window_manager:libwm",
  ]

  install_enable = true

  subsystem_name = "barrierfree"
  part_name = "accessibility"
}
