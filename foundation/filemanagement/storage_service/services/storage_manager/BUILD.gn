# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/ohos/sa_profile/sa_profile.gni")
import("//foundation/filemanagement/storage_service/storage_service_aafwk.gni")

config("storage_manager_config") {
  include_dirs = [
    "include",
    "../../interfaces/innerkits/storage_manager/native",
    "//utils/system/safwk/native/include",
    "//commonlibrary/c_utils/base/include",
    "../storage_daemon/include",
    "//foundation/filemanagement/storage_service/services/common/include",
    "//foundation/bundlemanager/bundle_framework/services/bundlemgr/include",
    "//foundation/multimedia/media_library/frameworks/utils/include",
    "//foundation/multimedia/media_library/interfaces/inner_api/media_library_helper/include",
  ]
}

ohos_shared_library("storage_manager") {
  sources = [
    "account_subscriber/account_subscriber.cpp",
    "crypto/filesystem_crypto.cpp",
    "disk/src/disk_manager_service.cpp",
    "ipc/src/storage_manager.cpp",
    "ipc/src/storage_manager_stub.cpp",
    "storage/src/storage_status_service.cpp",
    "storage/src/storage_total_status_service.cpp",
    "storage/src/volume_storage_status_service.cpp",
    "storage_daemon_communication/src/storage_daemon_communication.cpp",
    "user/src/multi_user_manager_service.cpp",
    "volume/src/notification.cpp",
    "volume/src/volume_manager_service.cpp",
  ]

  defines = [
    "STORAGE_LOG_TAG = \"StorageManager\"",
    "LOG_DOMAIN = 0xD004300",
  ]

  configs = [ ":storage_manager_config" ]

  deps = [
    "${ability_runtime_path}/frameworks/native/ability/native:abilitykit_native",
    "${ability_runtime_path}/interfaces/inner_api/dataobs_manager:dataobs_manager",
    "../../interfaces/innerkits/storage_manager/native:storage_manager_sa_proxy",
  ]

  if (storage_service_graphic) {
    defines += [ "STORAGE_SERVICE_GRAPHIC" ]
    deps += [
      "//foundation/multimedia/media_library/frameworks/innerkitsimpl/media_library_helper:media_library",
      "//foundation/multimedia/media_library/frameworks/innerkitsimpl/media_library_manager:media_library_manager",
    ]
  }

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "access_token:libaccesstoken_sdk",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "data_share:datashare_consumer",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "relational_store:native_rdb",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  subsystem_name = "filemanagement"
  part_name = "storage_service"
  install_enable = true
}
