# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")

ROOT_DIR = "//foundation/filemanagement/storage_service/services/storage_daemon"

ohos_unittest("storage_daemon_test") {
  module_out_path = "filemanagement/storage_service/storage_daemon"

  defines = [
    "STORAGE_LOG_TAG = \"StorageDaemon\"",
    "LOG_DOMAIN = 0xD004301",
  ]

  cflags_cc = [ "-Wno-unused-const-variable" ]

  include_dirs = [
    "$ROOT_DIR/include",
    "$ROOT_DIR/utils",
    "$ROOT_DIR/../storage_manager/include",
    "//foundation/filemanagement/storage_service/interfaces/innerkits/storage_manager/native",
    "//foundation/systemabilitymgr/safwk/interfaces/innerkits/safwk",
    "//base/security/huks/interfaces/innerkits/huks_standard/main/include",
    "//foundation/communication/ipc/interfaces/innerkits/libdbinder/include",
    "//foundation/filemanagement/storage_service/services/common/include",
    "//base/security/access_token/interfaces/innerkits/accesstoken/include",
  ]

  sources = [
    "$ROOT_DIR/disk/src/disk_config.cpp",
    "$ROOT_DIR/disk/src/disk_info.cpp",
    "$ROOT_DIR/disk/src/disk_manager.cpp",
    "$ROOT_DIR/ipc/src/storage_daemon.cpp",
    "$ROOT_DIR/ipc/src/storage_daemon_stub.cpp",
    "$ROOT_DIR/ipc/src/storage_manager_client.cpp",
    "$ROOT_DIR/ipc/test/storage_daemon_test.cpp",
    "$ROOT_DIR/user/src/mount_manager.cpp",
    "$ROOT_DIR/user/src/user_manager.cpp",
    "$ROOT_DIR/utils/disk_utils.cpp",
    "$ROOT_DIR/utils/mount_argument_utils.cpp",
    "$ROOT_DIR/utils/test/common/help_utils.cpp",
    "$ROOT_DIR/volume/src/external_volume_info.cpp",
    "$ROOT_DIR/volume/src/process.cpp",
    "$ROOT_DIR/volume/src/volume_info.cpp",
    "$ROOT_DIR/volume/src/volume_manager.cpp",
  ]

  deps = [
    "$ROOT_DIR/crypto:libsdcrypto",
    "//foundation/filemanagement/storage_service/services/storage_daemon:storage_common_utils",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "ability_base:zuri",
    "access_token:libaccesstoken_sdk",
    "app_file_service:fileshare_native",
    "c_utils:utils",
    "hiviewdfx_hilog_native:libhilog",
    "init:libbegetutil",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
  ]
}

ohos_unittest("storage_daemon_proxy_test") {
  module_out_path = "filemanagement/storage_service/storage_daemon"

  defines = [
    "STORAGE_LOG_TAG = \"StorageDaemon\"",
    "LOG_DOMAIN = 0xD004301",
  ]

  include_dirs = [
    "$ROOT_DIR/include",
    "//foundation/filemanagement/storage_service/services/common/include",
    "//foundation/communication/ipc/interfaces/innerkits/libdbinder/include",
  ]

  sources = [
    "$ROOT_DIR/ipc/src/storage_daemon_proxy.cpp",
    "$ROOT_DIR/ipc/test/storage_daemon_proxy_test.cpp",
  ]

  deps = [
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "c_utils:utils",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]
}

ohos_unittest("storage_daemon_stub_test") {
  module_out_path = "filemanagement/storage_service/storage_daemon"

  defines = [
    "STORAGE_LOG_TAG = \"StorageDaemon\"",
    "LOG_DOMAIN = 0xD004301",
  ]

  include_dirs = [
    "$ROOT_DIR/include",
    "$ROOT_DIR/ipc/test/",
    "//foundation/filemanagement/storage_service/services/common/include",
    "//base/security/huks/interfaces/innerkits/huks_standard/main/include",
    "//foundation/communication/ipc/interfaces/innerkits/libdbinder/include",
    "//base/security/access_token/interfaces/innerkits/accesstoken/include",
  ]

  sources = [
    "$ROOT_DIR/ipc/src/storage_daemon_proxy.cpp",
    "$ROOT_DIR/ipc/src/storage_daemon_stub.cpp",
    "$ROOT_DIR/ipc/test/storage_daemon_stub_test.cpp",
    "$ROOT_DIR/user/src/user_manager.cpp",
    "$ROOT_DIR/utils/mount_argument_utils.cpp",
  ]

  deps = [
    "//foundation/filemanagement/storage_service/services/storage_daemon:storage_common_utils",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "c_utils:utils",
    "hiviewdfx_hilog_native:libhilog",
    "init:libbegetutil",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]
}

group("storage_daemon_ipc_test") {
  testonly = true
  deps = [
    ":storage_daemon_proxy_test",
    ":storage_daemon_stub_test",
    ":storage_daemon_test",
  ]
}
