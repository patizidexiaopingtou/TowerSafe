/*
 * Copyright (c) 2022 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @addtogroup HdiUsb
 * @{
 *
 * @brief Provides unified APIs for usb services to access usb drivers.
 *
 * A usb service can obtain a usb driver object or agent and then call APIs provided by this object or agent to
 * access different types of usb devices based on the usb IDs, thereby obtaining usb information,
 * subscribing to or unsubscribing from usb data, enabling or disabling a usb,
 * setting the usb data reporting mode, and setting usb options such as the accuracy and measurement range.
 *
 * @version 1.0
 */

package ohos.hdi.usb.v1_0;

import ohos.hdi.usb.v1_0.UsbTypes;

/**
 * @brief Defines the callback for reporting usb data. This callback needs to be registered when
 * a usb user subscribes to usb data. Only after the usb is enabled, the usb data subscriber can receive
 * usb data. For details, see {@link IUsbInterface}.
 *
 * @since 3.2
 */
[callback] interface IUsbdSubscriber {

    DeviceEvent([in] struct USBDeviceInfo info);

    PortChangedEvent([in] struct PortInfo info);
    
}