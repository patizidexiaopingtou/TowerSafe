# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//drivers/hdf_core/adapter/uhdf2/uhdf.gni")
import("//drivers/peripheral/audio/audio.gni")

if (drivers_peripheral_audio_hdf_proxy_stub == true) {
  if (defined(ohos_lite)) {
    ohos_shared_library("hdi_audio_client") {
      include_dirs = [
        "//drivers/peripheral/audio/interfaces/include",
        "//drivers/peripheral/audio/hal/hdi_passthrough/include",
        "//drivers/peripheral/audio/hal/hdi_binder/proxy/include",
        "//drivers/peripheral/audio/hal/hdi_binder/server/include",
        "//third_party/cJSON",
        "//third_party/bounds_checking_function/include",
        "//drivers/hdf_core/adapter/uhdf2/include/hdi",
        "//drivers/hdf_core/adapter/uhdf2/shared/include",
      ]

      sources = [
        "//drivers/peripheral/audio/hal/hdi_passthrough/src/audio_adapter_info_common.c",
        "//drivers/peripheral/audio/hal/hdi_passthrough/src/audio_common.c",
        "//third_party/cJSON/cJSON.c",
        "src/audio_proxy_adapter.c",
        "src/audio_proxy_capture.c",
        "src/audio_proxy_common.c",
        "src/audio_proxy_manager.c",
        "src/audio_proxy_render.c",
      ]

      deps = [ "//third_party/bounds_checking_function:libsec_shared" ]

      if (enable_audio_hal_hdf_log) {
        defines = [ "AUDIO_HDF_LOG" ]
      }

      subsystem_name = "hdf"
      part_name = "drivers_peripheral_audio"
    }
  } else {
    ohos_shared_library("hdi_audio_client") {
      include_dirs = [
        "//drivers/peripheral/audio/interfaces/include",
        "//drivers/peripheral/audio/hal/hdi_passthrough/include",
        "//drivers/peripheral/audio/hal/hdi_binder/proxy/include",
        "//drivers/peripheral/audio/hal/hdi_binder/server/include",
        "//third_party/cJSON",
        "//third_party/bounds_checking_function/include",
        "//drivers/hdf_core/adapter/uhdf2/include/host",
      ]

      sources = [
        "//drivers/peripheral/audio/hal/hdi_passthrough/src/audio_adapter_info_common.c",
        "//drivers/peripheral/audio/hal/hdi_passthrough/src/audio_common.c",
        "//third_party/cJSON/cJSON.c",
        "src/audio_proxy_adapter.c",
        "src/audio_proxy_capture.c",
        "src/audio_proxy_common.c",
        "src/audio_proxy_manager.c",
        "src/audio_proxy_render.c",
      ]

      if (is_standard_system) {
        external_deps = [
          "c_utils:utils",
          "hdf_core:libhdf_ipc_adapter",
          "hdf_core:libhdf_utils",
          "hdf_core:libhdi",
          "hiviewdfx_hilog_native:libhilog",
        ]
      } else {
        external_deps = [ "hilog:libhilog" ]
      }

      if (enable_audio_hal_hdf_log) {
        defines = [ "AUDIO_HDF_LOG" ]
      }

      install_images = [ chipset_base_dir ]
      subsystem_name = "hdf"
      part_name = "drivers_peripheral_audio"
    }
  }
}
