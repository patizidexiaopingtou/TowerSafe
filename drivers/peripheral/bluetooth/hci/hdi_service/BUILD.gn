# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//build/ohos.gni")
import("//drivers/hdf_core/adapter/uhdf2/uhdf.gni")

root_path = "//drivers/peripheral/bluetooth/hci/hdi_service"

ohos_shared_library("libhci_interface_service_1.0") {
  include_dirs = [
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core/include",
    "//drivers/hdf_core/adapter/uhdf2/include/host",
    "$root_path",
    "$root_path/implement",
  ]

  sources = [
    "$root_path/hci_interface_impl.cpp",
    "$root_path/implement/bluetooth_address.cpp",
    "$root_path/implement/h4_protocol.cpp",
    "$root_path/implement/hci_protocol.cpp",
    "$root_path/implement/hci_watcher.cpp",
    "$root_path/implement/mct_protocol.cpp",
    "$root_path/implement/vendor_interface.cpp",
  ]

  if (is_standard_system) {
    external_deps = [
      "c_utils:utils",
      "drivers_interface_bluetooth:bluetooth_hci_idl_headers",
      "hiviewdfx_hilog_native:libhilog",
    ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }

  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_bluetooth"
}

ohos_shared_library("libbluetooth_hci_hdi_driver") {
  include_dirs = [
    "//drivers/hdf_core/adapter/uhdf2/include/host",
    "$root_path",
  ]

  sources = [ "$root_path/hci_interface_driver.cpp" ]

  deps = [ "//drivers/interface/bluetooth/hci/v1_0:libbluetooth_hci_stub_1.0" ]

  if (is_standard_system) {
    external_deps = [
      "c_utils:utils",
      "hdf_core:libhdf_ipc_adapter",
      "hdf_core:libhdi",
      "hiviewdfx_hilog_native:libhilog",
      "ipc:ipc_single",
    ]
  } else {
    external_deps = [
      "hilog:libhilog",
      "ipc:ipc_single",
    ]
  }

  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_bluetooth"
}

group("hdi_bluetooth_hci_service") {
  deps = [
    ":libbluetooth_hci_hdi_driver",
    ":libhci_interface_service_1.0",
  ]
}
