# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//build/ohos.gni")
import("//drivers/hdf_core/adapter/uhdf2/uhdf.gni")

ohos_shared_library("libagnss_interface_service_1.0") {
  include_dirs = [
    "//drivers/peripheral/location/agnss/hdi_service",
    "//drivers/peripheral/location/gnss/hdi_service",
  ]
  sources = [ "agnss_interface_impl.cpp" ]

  deps = [ "//drivers/peripheral/location/gnss/hdi_service:libgnss_interface_service_1.0" ]

  cflags = [
    "-Wall",
    "-Wextra",
    "-Werror",
    "-fsigned-char",
    "-fno-common",
    "-fno-strict-aliasing",
  ]

  if (is_standard_system) {
    external_deps = [
      "c_utils:utils",
      "drivers_interface_location_agnss:location_agnss_idl_headers",
      "hiviewdfx_hilog_native:libhilog",
      "ipc:ipc_single",
    ]
  } else {
    external_deps = [
      "hilog:libhilog",
      "ipc:ipc_single",
    ]
  }

  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_location_agnss"
}

ohos_shared_library("liblocation_agnss_hdi_driver") {
  include_dirs = [ "//drivers/peripheral/location/agnss/hdi_service" ]

  sources = [ "agnss_interface_driver.cpp" ]

  deps =
      [ "//drivers/interface/location/agnss/v1_0:liblocation_agnss_stub_1.0" ]

  cflags = [
    "-Wall",
    "-Wextra",
    "-Werror",
    "-fsigned-char",
    "-fno-common",
    "-fno-strict-aliasing",
  ]

  if (is_standard_system) {
    external_deps = [
      "c_utils:utils",
      "hdf_core:libhdf_host",
      "hdf_core:libhdf_ipc_adapter",
      "hdf_core:libhdi",
      "hiviewdfx_hilog_native:libhilog",
      "ipc:ipc_single",
    ]
  } else {
    external_deps = [
      "hilog:libhilog",
      "ipc:ipc_single",
    ]
  }

  install_images = [ chipset_base_dir ]
  subsystem_name = "hdf"
  part_name = "drivers_peripheral_location_agnss"
}

group("hdi_location_agnss_service") {
  deps = [
    ":libagnss_interface_service_1.0",
    ":liblocation_agnss_hdi_driver",
  ]
}
