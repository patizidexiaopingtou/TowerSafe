// Copyright (c) 2021 Huawei Device Co., Ltd.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option java_package = "ohos.devtools.datasources.transport.grpc.service";

import "profiler_service_types.proto";

// RPC interface between profiler service and host service
// Use protobuf plug-ins to convert proto define to
// source and header files during the build process.
service IProfilerService {
    // get all plugin infos and capabilities.
    rpc GetCapabilities(GetCapabilitiesRequest) returns (GetCapabilitiesResponse);

    // create tracing sesion and pass tracing config to plugins.
    rpc CreateSession(CreateSessionRequest) returns (CreateSessionResponse);

    // start tracing session, active server side tracing triggers.
    rpc StartSession(StartSessionRequest) returns (StartSessionResponse);

    // get server-side cached tracing data since current session started.
    rpc FetchData(FetchDataRequest) returns (stream FetchDataResponse);

    // stop tracing session, deactivate server side tracing triggers.
    rpc StopSession(StopSessionRequest) returns (StopSessionResponse);

    // destroy tracing session.
    rpc DestroySession(DestroySessionRequest) returns (DestroySessionResponse);

    // keep tracing session alive, call this interface will restart session expire count down task.
    rpc KeepSession(KeepSessionRequest) returns (KeepSessionResponse);
}
