// THIS FILE IS GENERATED BY ftrace_proto_generator.py, PLEASE DON'T EDIT IT!
// Copyright (c) 2021 Huawei Device Co., Ltd.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

option optimize_for = LITE_RUNTIME;

// category: timer
// /sys/kernel/debug/tracing/events/timer/hrtimer_cancel/format
message HrtimerCancelFormat {
    uint64 hrtimer = 1;
}

// /sys/kernel/debug/tracing/events/timer/hrtimer_expire_entry/format
message HrtimerExpireEntryFormat {
    uint64 hrtimer = 1;
    int64 now = 2;
    uint64 function = 3;
}

// /sys/kernel/debug/tracing/events/timer/hrtimer_expire_exit/format
message HrtimerExpireExitFormat {
    uint64 hrtimer = 1;
}

// /sys/kernel/debug/tracing/events/timer/hrtimer_init/format
message HrtimerInitFormat {
    uint64 hrtimer = 1;
    int32 clockid = 2;
    uint32 mode = 3;
}

// /sys/kernel/debug/tracing/events/timer/hrtimer_start/format
message HrtimerStartFormat {
    uint64 hrtimer = 1;
    uint64 function = 2;
    int64 expires = 3;
    int64 softexpires = 4;
    uint32 mode = 5;
}

// /sys/kernel/debug/tracing/events/timer/itimer_expire/format
message ItimerExpireFormat {
    int32 which = 1;
    int32 pid = 2;
    uint64 now = 3;
}

// /sys/kernel/debug/tracing/events/timer/itimer_state/format
message ItimerStateFormat {
    int32 which = 1;
    uint64 expires = 2;
    uint64 value_sec = 3;
    uint64 value_usec = 4;
    uint64 interval_sec = 5;
    uint64 interval_usec = 6;
}

// /sys/kernel/debug/tracing/events/timer/timer_cancel/format
message TimerCancelFormat {
    uint64 timer = 1;
}

// /sys/kernel/debug/tracing/events/timer/timer_expire_entry/format
message TimerExpireEntryFormat {
    uint64 timer = 1;
    uint64 now = 2;
    uint64 function = 3;
}

// /sys/kernel/debug/tracing/events/timer/timer_expire_exit/format
message TimerExpireExitFormat {
    uint64 timer = 1;
}

// /sys/kernel/debug/tracing/events/timer/timer_init/format
message TimerInitFormat {
    uint64 timer = 1;
}

// /sys/kernel/debug/tracing/events/timer/timer_start/format
message TimerStartFormat {
    uint64 timer = 1;
    uint64 function = 2;
    uint64 expires = 3;
    uint64 now = 4;
    uint32 flags = 5;
}

