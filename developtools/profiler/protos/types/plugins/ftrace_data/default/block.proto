// THIS FILE IS GENERATED BY ftrace_proto_generator.py, PLEASE DON'T EDIT IT!
// Copyright (c) 2021 Huawei Device Co., Ltd.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

option optimize_for = LITE_RUNTIME;

// category: block
// /sys/kernel/debug/tracing/events/block/block_bio_backmerge/format
message BlockBioBackmergeFormat {
    uint64 dev = 1;
    uint64 sector = 2;
    uint32 nr_sector = 3;
    string rwbs = 4;
    string comm = 5;
}

// /sys/kernel/debug/tracing/events/block/block_bio_bounce/format
message BlockBioBounceFormat {
    uint64 dev = 1;
    uint64 sector = 2;
    uint32 nr_sector = 3;
    string rwbs = 4;
    string comm = 5;
}

// /sys/kernel/debug/tracing/events/block/block_bio_complete/format
message BlockBioCompleteFormat {
    uint64 dev = 1;
    uint64 sector = 2;
    uint32 nr_sector = 3;
    int32 error = 4;
    string rwbs = 5;
}

// /sys/kernel/debug/tracing/events/block/block_bio_frontmerge/format
message BlockBioFrontmergeFormat {
    uint64 dev = 1;
    uint64 sector = 2;
    uint32 nr_sector = 3;
    string rwbs = 4;
    string comm = 5;
}

// /sys/kernel/debug/tracing/events/block/block_bio_queue/format
message BlockBioQueueFormat {
    uint64 dev = 1;
    uint64 sector = 2;
    uint32 nr_sector = 3;
    string rwbs = 4;
    string comm = 5;
}

// /sys/kernel/debug/tracing/events/block/block_bio_remap/format
message BlockBioRemapFormat {
    uint64 dev = 1;
    uint64 sector = 2;
    uint32 nr_sector = 3;
    uint64 old_dev = 4;
    uint64 old_sector = 5;
    string rwbs = 6;
}

// /sys/kernel/debug/tracing/events/block/block_dirty_buffer/format
message BlockDirtyBufferFormat {
    uint64 dev = 1;
    uint64 sector = 2;
    uint64 size = 3;
}

// /sys/kernel/debug/tracing/events/block/block_getrq/format
message BlockGetrqFormat {
    uint64 dev = 1;
    uint64 sector = 2;
    uint32 nr_sector = 3;
    string rwbs = 4;
    string comm = 5;
}

// /sys/kernel/debug/tracing/events/block/block_plug/format
message BlockPlugFormat {
    string comm = 1;
}

// /sys/kernel/debug/tracing/events/block/block_rq_complete/format
message BlockRqCompleteFormat {
    uint64 dev = 1;
    uint64 sector = 2;
    uint32 nr_sector = 3;
    int32 error = 4;
    string rwbs = 5;
    string cmd = 6;
}

// /sys/kernel/debug/tracing/events/block/block_rq_insert/format
message BlockRqInsertFormat {
    uint64 dev = 1;
    uint64 sector = 2;
    uint32 nr_sector = 3;
    uint32 bytes = 4;
    string rwbs = 5;
    string comm = 6;
    string cmd = 7;
}

// /sys/kernel/debug/tracing/events/block/block_rq_issue/format
message BlockRqIssueFormat {
    uint64 dev = 1;
    uint64 sector = 2;
    uint32 nr_sector = 3;
    uint32 bytes = 4;
    string rwbs = 5;
    string comm = 6;
    string cmd = 7;
}

// /sys/kernel/debug/tracing/events/block/block_rq_remap/format
message BlockRqRemapFormat {
    uint64 dev = 1;
    uint64 sector = 2;
    uint32 nr_sector = 3;
    uint64 old_dev = 4;
    uint64 old_sector = 5;
    uint32 nr_bios = 6;
    string rwbs = 7;
}

// /sys/kernel/debug/tracing/events/block/block_rq_requeue/format
message BlockRqRequeueFormat {
    uint64 dev = 1;
    uint64 sector = 2;
    uint32 nr_sector = 3;
    string rwbs = 4;
    string cmd = 5;
}

// /sys/kernel/debug/tracing/events/block/block_sleeprq/format
message BlockSleeprqFormat {
    uint64 dev = 1;
    uint64 sector = 2;
    uint32 nr_sector = 3;
    string rwbs = 4;
    string comm = 5;
}

// /sys/kernel/debug/tracing/events/block/block_split/format
message BlockSplitFormat {
    uint64 dev = 1;
    uint64 sector = 2;
    uint64 new_sector = 3;
    string rwbs = 4;
    string comm = 5;
}

// /sys/kernel/debug/tracing/events/block/block_touch_buffer/format
message BlockTouchBufferFormat {
    uint64 dev = 1;
    uint64 sector = 2;
    uint64 size = 3;
}

// /sys/kernel/debug/tracing/events/block/block_unplug/format
message BlockUnplugFormat {
    int32 nr_rq = 1;
    string comm = 2;
}

