// THIS FILE IS GENERATED BY ftrace_proto_generator.py, PLEASE DON'T EDIT IT!
// Copyright (c) 2021 Huawei Device Co., Ltd.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

option optimize_for = LITE_RUNTIME;

// category: kmem
// /sys/kernel/debug/tracing/events/kmem/kfree/format
message KfreeFormat {
    uint64 call_site = 1;
    uint64 ptr = 2;
}

// /sys/kernel/debug/tracing/events/kmem/kmalloc/format
message KmallocFormat {
    uint64 call_site = 1;
    uint64 ptr = 2;
    uint64 bytes_req = 3;
    uint64 bytes_alloc = 4;
    uint32 gfp_flags = 5;
}

// /sys/kernel/debug/tracing/events/kmem/kmalloc_node/format
message KmallocNodeFormat {
    uint64 call_site = 1;
    uint64 ptr = 2;
    uint64 bytes_req = 3;
    uint64 bytes_alloc = 4;
    uint32 gfp_flags = 5;
    int32 node = 6;
}

// /sys/kernel/debug/tracing/events/kmem/kmem_cache_alloc/format
message KmemCacheAllocFormat {
    uint64 call_site = 1;
    uint64 ptr = 2;
    uint64 bytes_req = 3;
    uint64 bytes_alloc = 4;
    uint32 gfp_flags = 5;
}

// /sys/kernel/debug/tracing/events/kmem/kmem_cache_alloc_node/format
message KmemCacheAllocNodeFormat {
    uint64 call_site = 1;
    uint64 ptr = 2;
    uint64 bytes_req = 3;
    uint64 bytes_alloc = 4;
    uint32 gfp_flags = 5;
    int32 node = 6;
}

// /sys/kernel/debug/tracing/events/kmem/kmem_cache_free/format
message KmemCacheFreeFormat {
    uint64 call_site = 1;
    uint64 ptr = 2;
}

// /sys/kernel/debug/tracing/events/kmem/mm_page_alloc/format
message MmPageAllocFormat {
    uint64 pfn = 1;
    uint32 order = 2;
    uint32 gfp_flags = 3;
    int32 migratetype = 4;
}

// /sys/kernel/debug/tracing/events/kmem/mm_page_alloc_extfrag/format
message MmPageAllocExtfragFormat {
    uint64 pfn = 1;
    int32 alloc_order = 2;
    int32 fallback_order = 3;
    int32 alloc_migratetype = 4;
    int32 fallback_migratetype = 5;
    int32 change_ownership = 6;
}

// /sys/kernel/debug/tracing/events/kmem/mm_page_alloc_zone_locked/format
message MmPageAllocZoneLockedFormat {
    uint64 pfn = 1;
    uint32 order = 2;
    int32 migratetype = 3;
}

// /sys/kernel/debug/tracing/events/kmem/mm_page_free/format
message MmPageFreeFormat {
    uint64 pfn = 1;
    uint32 order = 2;
}

// /sys/kernel/debug/tracing/events/kmem/mm_page_free_batched/format
message MmPageFreeBatchedFormat {
    uint64 pfn = 1;
}

// /sys/kernel/debug/tracing/events/kmem/mm_page_pcpu_drain/format
message MmPagePcpuDrainFormat {
    uint64 pfn = 1;
    uint32 order = 2;
    int32 migratetype = 3;
}

// /sys/kernel/debug/tracing/events/kmem/rss_stat/format
message RssStatFormat {
    uint32 mm_id = 1;
    uint32 curr = 2;
    int32 member = 3;
    uint64 size = 4;
}

