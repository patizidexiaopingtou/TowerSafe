// THIS FILE IS GENERATED BY ftrace_proto_generator.py, PLEASE DON'T EDIT IT!
// Copyright (c) 2021 Huawei Device Co., Ltd.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

option optimize_for = LITE_RUNTIME;

// category: power
// /sys/kernel/debug/tracing/events/power/clock_disable/format
message ClockDisableFormat {
    string name = 1;
    uint64 state = 2;
    uint64 cpu_id = 3;
}

// /sys/kernel/debug/tracing/events/power/clock_enable/format
message ClockEnableFormat {
    string name = 1;
    uint64 state = 2;
    uint64 cpu_id = 3;
}

// /sys/kernel/debug/tracing/events/power/clock_set_rate/format
message ClockSetRateFormat {
    string name = 1;
    uint64 state = 2;
    uint64 cpu_id = 3;
}

// /sys/kernel/debug/tracing/events/power/cpu_frequency/format
message CpuFrequencyFormat {
    uint32 state = 1;
    uint32 cpu_id = 2;
}

// /sys/kernel/debug/tracing/events/power/cpu_frequency_limits/format
message CpuFrequencyLimitsFormat {
    uint32 min_freq = 1;
    uint32 max_freq = 2;
    uint32 cpu_id = 3;
}

// /sys/kernel/debug/tracing/events/power/cpu_idle/format
message CpuIdleFormat {
    uint32 state = 1;
    uint32 cpu_id = 2;
}

// /sys/kernel/debug/tracing/events/power/dev_pm_qos_add_request/format
message DevPmQosAddRequestFormat {
    string name = 1;
    uint32 type = 2;
    int32 new_value = 3;
}

// /sys/kernel/debug/tracing/events/power/dev_pm_qos_remove_request/format
message DevPmQosRemoveRequestFormat {
    string name = 1;
    uint32 type = 2;
    int32 new_value = 3;
}

// /sys/kernel/debug/tracing/events/power/dev_pm_qos_update_request/format
message DevPmQosUpdateRequestFormat {
    string name = 1;
    uint32 type = 2;
    int32 new_value = 3;
}

// /sys/kernel/debug/tracing/events/power/device_pm_callback_end/format
message DevicePmCallbackEndFormat {
    string device = 1;
    string driver = 2;
    int32 error = 3;
}

// /sys/kernel/debug/tracing/events/power/device_pm_callback_start/format
message DevicePmCallbackStartFormat {
    string device = 1;
    string driver = 2;
    string parent = 3;
    string pm_ops = 4;
    int32 event = 5;
}

// /sys/kernel/debug/tracing/events/power/pm_qos_add_request/format
message PmQosAddRequestFormat {
    int32 pm_qos_class = 1;
    int32 value = 2;
}

// /sys/kernel/debug/tracing/events/power/pm_qos_remove_request/format
message PmQosRemoveRequestFormat {
    int32 pm_qos_class = 1;
    int32 value = 2;
}

// /sys/kernel/debug/tracing/events/power/pm_qos_update_flags/format
message PmQosUpdateFlagsFormat {
    uint32 action = 1;
    int32 prev_value = 2;
    int32 curr_value = 3;
}

// /sys/kernel/debug/tracing/events/power/pm_qos_update_request/format
message PmQosUpdateRequestFormat {
    int32 pm_qos_class = 1;
    int32 value = 2;
}

// /sys/kernel/debug/tracing/events/power/pm_qos_update_request_timeout/format
message PmQosUpdateRequestTimeoutFormat {
    int32 pm_qos_class = 1;
    int32 value = 2;
    uint64 timeout_us = 3;
}

// /sys/kernel/debug/tracing/events/power/pm_qos_update_target/format
message PmQosUpdateTargetFormat {
    uint32 action = 1;
    int32 prev_value = 2;
    int32 curr_value = 3;
}

// /sys/kernel/debug/tracing/events/power/power_domain_target/format
message PowerDomainTargetFormat {
    string name = 1;
    uint64 state = 2;
    uint64 cpu_id = 3;
}

// /sys/kernel/debug/tracing/events/power/pstate_sample/format
message PstateSampleFormat {
    uint32 core_busy = 1;
    uint32 scaled_busy = 2;
    uint32 from = 3;
    uint32 to = 4;
    uint64 mperf = 5;
    uint64 aperf = 6;
    uint64 tsc = 7;
    uint32 freq = 8;
    uint32 io_boost = 9;
}

// /sys/kernel/debug/tracing/events/power/suspend_resume/format
message SuspendResumeFormat {
    string action = 1;
    int32 val = 2;
    uint32 start = 3;
}

// /sys/kernel/debug/tracing/events/power/wakeup_source_activate/format
message WakeupSourceActivateFormat {
    string name = 1;
    uint64 state = 2;
}

// /sys/kernel/debug/tracing/events/power/wakeup_source_deactivate/format
message WakeupSourceDeactivateFormat {
    string name = 1;
    uint64 state = 2;
}

