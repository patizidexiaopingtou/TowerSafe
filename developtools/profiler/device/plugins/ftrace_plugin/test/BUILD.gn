# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../base/config.gni")
import("../ftrace.gni")

module_output_path = "${OHOS_PROFILER_TEST_MODULE_OUTPUT_PATH}/device"
config("module_private_config") {
  visibility = [ ":*" ]
  if (current_toolchain != host_toolchain) {
    defines = [ "HAVE_HILOG" ]
  }
}

ohos_unittest("ftrace_plugin_ut") {
  module_out_path = module_output_path
  sources = [
    "unittest/file_utils_test.cpp",
    "unittest/flow_controller_test.cpp",
    "unittest/ftrace_data_reader_test.cpp",
    "unittest/ftrace_field_parser_test.cpp",
    "unittest/ftrace_fs_ops_test.cpp",
    "unittest/ftrace_parser_test.cpp",
    "unittest/hitrace_ops_test.cpp",
    "unittest/kernel_symbols_parser_test.cpp",
    "unittest/paged_mem_pool_test.cpp",
    "unittest/printk_formats_parser_test.cpp",
    "unittest/process_utils_test.cpp",
    "unittest/result_transporter_test.cpp",
    "unittest/string_utils_test.cpp",
    "unittest/sub_event_parser_test.cpp",
    "unittest/trace_ops_test.cpp",
  ]
  deps = [
    "${OHOS_PROFILER_DIR}/device/plugins/ftrace_plugin:ftrace_plugin_source",
    "${OHOS_PROFILER_DIR}/protos/types/plugins/ftrace_data/${device_kernel_version}:ftrace_data_cpp",
    "//third_party/bounds_checking_function:libsec_static",
    "//third_party/googletest:gtest_main",
  ]
  include_dirs = [
    "../include",
    "../../../memory_plugin/include",
    "${OHOS_PROFILER_DIR}/interfaces/kits",
    "${OHOS_PROFILER_DIR}/device/base/include",
    "//third_party/googletest/googletest/include/gtest",
    "//third_party/bounds_checking_function/include",
    "//commonlibrary/c_utils/base/include",
  ]
  cflags = [
    "-Wno-inconsistent-missing-override",
    "-Dprivate=public",  #allow test code access private members
  ]
  external_deps = [ "hiviewdfx_hilog_native:libhilog" ]
  configs = [ ":module_private_config" ]
  subsystem_name = "${OHOS_PROFILER_SUBSYS_NAME}"
  part_name = "${OHOS_PROFILER_PART_NAME}"
}

ohos_executable("busy_test") {
  sources = [ "app/busy_workers.cpp" ]
  public_configs = [ "${OHOS_PROFILER_DIR}/device/base:hiprofiler_test_config" ]
  install_enable = false
  subsystem_name = "${OHOS_PROFILER_SUBSYS_NAME}"
  part_name = "${OHOS_PROFILER_PART_NAME}"
}

ohos_executable("regex_test") {
  sources = [ "app/regex_test.cpp" ]
  public_configs = [ "${OHOS_PROFILER_DIR}/device/base:hiprofiler_test_config" ]
  install_enable = false
  subsystem_name = "${OHOS_PROFILER_SUBSYS_NAME}"
  part_name = "${OHOS_PROFILER_PART_NAME}"
}

ohos_executable("get_tzinfo") {
  sources = [ "app/get_tzinfo.cpp" ]
  public_configs = [ "${OHOS_PROFILER_DIR}/device/base:hiprofiler_test_config" ]
  install_enable = false
  subsystem_name = "${OHOS_PROFILER_SUBSYS_NAME}"
  part_name = "${OHOS_PROFILER_PART_NAME}"
}

group("unittest") {
  testonly = true
  deps = [ ":ftrace_plugin_ut" ]
}
