# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
template("ohos_source_set") {
  source_set(target_name) {
    sources = invoker.sources
    if (defined(invoker.configs)) {
      configs = invoker.configs
    }
    if (defined(invoker.cflags)) {
      cflags = invoker.cflags
    }
    if (defined(invoker.include_dirs)) {
      include_dirs = invoker.include_dirs
    }
    if (defined(invoker.deps)) {
      deps = invoker.deps
    }
    if (defined(invoker.cflags_cc)) {
      cflags_cc = invoker.cflags_cc
    }
    if (defined(invoker.ldflags)) {
      ldflags = invoker.ldflags
    }
    if (defined(invoker.public_deps)) {
      public_deps = invoker.public_deps
    }
    if (defined(invoker.public_configs)) {
      public_configs = invoker.public_configs
    }
  }
}
template("ohos_shared_library") {
  shared_library(target_name) {
    sources = invoker.sources
    if (defined(invoker.configs)) {
      configs = invoker.configs
    }
    public_configs = invoker.public_configs
    if (defined(invoker.defines)) {
      defines = invoker.defines
    }
    if (defined(invoker.cflags)) {
      cflags = invoker.cflags
    }
    if (defined(invoker.include_dirs)) {
      include_dirs = invoker.include_dirs
    }
    if (defined(invoker.cflags_cc)) {
      cflags_cc = invoker.cflags_cc
    }
    if (defined(invoker.deps)) {
      deps = invoker.deps
    }
  }
}
template("ohos_static_library") {
  static_library(target_name) {
    sources = invoker.sources
    if (defined(invoker.configs)) {
      configs = invoker.configs
    }
    public_configs = invoker.public_configs
    if (defined(invoker.defines)) {
      defines = invoker.defines
    }
    if (defined(invoker.cflags)) {
      cflags = invoker.cflags
    }
    if (defined(invoker.include_dirs)) {
      include_dirs = invoker.include_dirs
    }
    if (defined(invoker.cflags_cc)) {
      cflags_cc = invoker.cflags_cc
    }
    if (defined(invoker.deps)) {
      deps = invoker.deps
    }
  }
}
template("ohos_executable") {
  executable(target_name) {
    if (defined(invoker.include_dirs)) {
      include_dirs = invoker.include_dirs
    }
    sources = invoker.sources
    if (defined(invoker.defines)) {
      defines = invoker.defines
    }
    if (defined(invoker.cflags)) {
      cflags = invoker.cflags
    }
    if (defined(invoker.deps)) {
      deps = invoker.deps
    }
    if (defined(invoker.cflags_cc)) {
      cflags_cc = invoker.cflags_cc
    }
    if (defined(invoker.output_name)) {
      output_name = invoker.output_name
    }
    if (defined(invoker.testonly)) {
      testonly = invoker.testonly
    }
    if (defined(invoker.ohos_test)) {
      ohos_test = invoker.ohos_test
    }
  }
}
