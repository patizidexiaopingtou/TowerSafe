# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
is_win = false
is_linux = false
is_macx = false
is_protoc = false
with_perf = true
with_ebpf_help_table = false
is_mingw = false
with_libunwind = false
is_sdkdemo = false
is_sdkdemo_test = false
target_cpu = "x64"
declare_args() {
  ar = "ar"
  is_debug = true
  use_wasm = false
  is_test = false
  is_sdkdemo = false
  is_sdkdemo_test = false
  testonly = false
  is_fuzz = false
  is_macx = false
  target = "trace_streamer"
}
if (target_os == "linux") {
  is_linux = true
} else if (target_os == "macx") {
  is_macx = true
} else if (target_os == "windows") {
  is_win = true
  is_mingw = true
} else {
  print("unknown platform " + target_os)
  exit(-1)
}

if (target == "wasm") {
  use_wasm = true
} else if (target == "test") {
  is_test = true
  testonly = true
} else if (target == "fuzz") {
  is_fuzz = true
  testonly = true
} else if (target == "protoc") {
  is_protoc = true
} else if (target == "sdkdemo") {
  is_sdkdemo = true
  use_wasm = true
} else if (target == "sdkdemotest") {
  is_sdkdemo_test = true
  testonly = true
} else if (target == "trace_streamer" || target == "streamer") {
  print("build " + target)
} else {
  print("unknown target " + target_os)
  exit(-1)
}

print("platform " + target_os)
default_configs = [
  "//gn:symbols",
  "//gn:default",
  "//gn:trace_cfg",
]

set_defaults("static_library") {
  configs = default_configs
}
if (!is_debug) {
  default_configs -= [ "//gn:symbols" ]
  default_configs += [ "//gn:release" ]
}
if (is_debug) {
  with_ebpf_help_table = true
}

set_defaults("ohos_source_set") {
  configs = default_configs
}
set_defaults("ohos_shared_library") {
  configs = default_configs
}
set_defaults("executable") {
  configs = default_configs
  configs += [ "//gn:executable" ]
}
if (use_wasm) {
  set_default_toolchain("//gn/toolchain:wasm")
} else {
  print(use_wasm)
  set_default_toolchain("//gn/toolchain:gcc_like")
}
