// Copyright (c) 2021 Huawei Device Co., Ltd.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option java_package = "ohos.devtools.datasources.transport.grpc.service";
option optimize_for = LITE_RUNTIME;

// Java heap memory event from jvmti interface.
message ClassInfo {
    int32 class_id = 1;
    string class_name = 2;
}

message AllocationInfo {
    int32 object_id = 1;
    int32 class_id = 2;
    int32 object_size = 3;
    int32 array_length = 4;
    int32 heap_id = 5;
    string thread_name = 6;

    message StackFrameInfo {
        int32 frame_id = 1;
        string class_name = 2;
        string method_name = 3;
        string file_name = 4;
        int32 line_number = 5;
    }
    // First element means stack top.
    repeated StackFrameInfo frame_info = 7;
}

message DeallocationInfo {
    int32 object_id = 1;
}

message AgentMemoryEvent {
    // timestamp obtained by CLOCK_REALTIME
    uint64 tv_sec = 1;
    uint64 tv_nsec = 2;

    oneof event {
        ClassInfo class_data = 3;
        AllocationInfo alloc_data = 4;
        DeallocationInfo free_data = 5;
    }
}

message BatchAgentMemoryEvent {
    repeated AgentMemoryEvent events = 1;
}
