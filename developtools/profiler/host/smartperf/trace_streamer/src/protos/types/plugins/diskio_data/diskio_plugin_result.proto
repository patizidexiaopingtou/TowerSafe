// Copyright (c) 2021 Huawei Device Co., Ltd.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option java_package = "ohos.devtools.datasources.transport.grpc.service";
option optimize_for = LITE_RUNTIME;

message CollectTimeStamp {
    uint64 tv_sec = 1;
    uint64 tv_nsec = 2;
}

message CpuStats {
    string name = 1;
    double cpu_user = 2;
    double cpu_nice = 3;
    double cpu_sys = 4;
    double cpu_idle = 5;
    double cpu_iowait = 6;
    double cpu_steal = 7;
}

message IoStatData {
    string name = 1;
    double ios_per_sec = 2; // 设备每秒的传输次数
    double rd_per_sec = 3;  // 每秒从设备读取的数据量 kB_read/s
    double wr_per_sec = 4;  // 每秒向设备写入的数据量 kB_wrtn/s
    double dc_per_sec = 5;  // kB_dscd/s
    uint64 rd_kb = 6;  // 读取的总数据量 kB_read
    uint64 wr_kb = 7;  // 写入的总数量数据量 kB_wrtn
    uint64 dc_kb = 8;  // kB_dscd
}

message IoStatExData {
    string name = 1;
    uint64 io_rd = 2;           // r/s
    uint64 io_rsectors = 3;     // kB/s, r+w+d
    uint64 io_rrqm = 4;         // rrqm/s
    uint64 io_rrqm_pc = 5;      // %rrqm
    uint64 io_r_await = 6;      // r_await
    uint64 io_rarqsz = 7;       // rareq-sz

    uint64 io_wr = 8;           // w/s
    uint64 io_wsectors = 9;     // wkB/s , r+w+d
    uint64 io_wrqm = 10;         // wrqm/s
    uint64 io_wrqm_pc = 11;     // %wrqm
    uint64 io_w_await = 12;     // w_await
    uint64 io_warqsz = 13;      // wareq-sz

    uint64 io_dc = 14;           // d/s
    uint64 io_dsectors = 15;     // dkB/s, r+w+d
    uint64 io_drqm = 16;         // drqm/s
    uint64 io_drqm_pc = 17;      // %drqm
    uint64 io_d_await = 18;      // d_await
    uint64 io_darqsz = 19;       // dareq-sz

    uint64 io_fd = 20;           // f/s
    uint64 io_f_await = 21;      // f_await
    uint64 io_farqsz = 22;       // fareq-sz
    uint64 disk_util = 23;       // fareq-sz
}

message StatsData {
    repeated CpuStats cpuinfo = 1;
    repeated IoStatData statsinfo = 2;
    repeated IoStatExData estatsinfo = 3;
}

message DiskioData {
    int64 prev_rd_sectors_kb = 1;
    int64 prev_wr_sectors_kb = 2;
    CollectTimeStamp prev_timestamp = 3;
    int64 rd_sectors_kb = 4;
    int64 wr_sectors_kb = 5;
    CollectTimeStamp timestamp = 6;
    StatsData statsData = 7;
}