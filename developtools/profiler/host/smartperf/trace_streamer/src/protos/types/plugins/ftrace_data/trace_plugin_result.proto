// Copyright (c) 2021 Huawei Device Co., Ltd.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "ftrace_event.proto";

option optimize_for = LITE_RUNTIME;

message TracePluginResult {
  repeated FtraceCpuStatsMsg ftrace_cpu_stats = 1;
  repeated FtraceCpuDetailMsg ftrace_cpu_detail = 2;
  repeated SymbolsDetailMsg symbols_detail = 5;
  repeated ClockDetailMsg clocks_detail = 6;
}

message ClockDetailMsg {
  // man clock_gettime
  enum ClockId {
    UNKNOW = 0;
    BOOTTIME = 1;
    REALTIME = 2;
    REALTIME_COARSE = 3;
    MONOTONIC = 4;
    MONOTONIC_COARSE = 5;
    MONOTONIC_RAW = 6;
  }
  ClockId id = 1;
  message TimeSpec {
    uint32 tv_sec = 1;
    uint32 tv_nsec = 2;
  };
  TimeSpec time = 2;
  TimeSpec resolution = 3;
};

message SymbolsDetailMsg {
  uint64 symbol_addr = 1; // symbol address
  string symbol_name = 2; // symbol name
}

message FtraceCpuStatsMsg {
  enum Status {
    TRACE_START = 0;
    TRACE_END = 1;
  }

  Status status = 1;
  repeated PerCpuStatsMsg per_cpu_stats = 2;
  string trace_clock = 3;
}

// cat /sys/kernel/debug/tracing/per_cpu/cpu0/stats
message PerCpuStatsMsg {
  uint64 cpu = 1;
  uint64 entries = 2;
  uint64 overrun = 3;
  uint64 commit_overrun = 4;
  uint64 bytes = 5;
  double oldest_event_ts = 6;
  double now_ts = 7;
  uint64 dropped_events = 8;
  uint64 read_events = 9;
}

message FtraceCpuDetailMsg {
  uint32 cpu = 1;
  repeated FtraceEvent event = 2;
  uint64 overwrite = 3;
}
