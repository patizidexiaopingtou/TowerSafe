// THIS FILE IS GENERATED BY ftrace_proto_generator.py, PLEASE DON'T EDIT IT!
// Copyright (c) 2021 Huawei Device Co., Ltd.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

option optimize_for = LITE_RUNTIME;

// category: sched
// /sys/kernel/debug/tracing/events/sched/sched_kthread_stop/format
message SchedKthreadStopFormat {
    string comm = 1;
    int32 pid = 2;
}

// /sys/kernel/debug/tracing/events/sched/sched_kthread_stop_ret/format
message SchedKthreadStopRetFormat {
    int32 ret = 1;
}

// /sys/kernel/debug/tracing/events/sched/sched_migrate_task/format
message SchedMigrateTaskFormat {
    string comm = 1;
    int32 pid = 2;
    int32 prio = 3;
    int32 orig_cpu = 4;
    int32 dest_cpu = 5;
}

// /sys/kernel/debug/tracing/events/sched/sched_move_numa/format
message SchedMoveNumaFormat {
    int32 pid = 1;
    int32 tgid = 2;
    int32 ngid = 3;
    int32 src_cpu = 4;
    int32 src_nid = 5;
    int32 dst_cpu = 6;
    int32 dst_nid = 7;
}

// /sys/kernel/debug/tracing/events/sched/sched_pi_setprio/format
message SchedPiSetprioFormat {
    string comm = 1;
    int32 pid = 2;
    int32 oldprio = 3;
    int32 newprio = 4;
}

// /sys/kernel/debug/tracing/events/sched/sched_process_exec/format
message SchedProcessExecFormat {
    string filename = 1;
    int32 pid = 2;
    int32 old_pid = 3;
}

// /sys/kernel/debug/tracing/events/sched/sched_process_exit/format
message SchedProcessExitFormat {
    string comm = 1;
    int32 pid = 2;
    int32 prio = 3;
}

// /sys/kernel/debug/tracing/events/sched/sched_process_fork/format
message SchedProcessForkFormat {
    string parent_comm = 1;
    int32 parent_pid = 2;
    string child_comm = 3;
    int32 child_pid = 4;
}

// /sys/kernel/debug/tracing/events/sched/sched_process_free/format
message SchedProcessFreeFormat {
    string comm = 1;
    int32 pid = 2;
    int32 prio = 3;
}

// /sys/kernel/debug/tracing/events/sched/sched_process_wait/format
message SchedProcessWaitFormat {
    string comm = 1;
    int32 pid = 2;
    int32 prio = 3;
}

// /sys/kernel/debug/tracing/events/sched/sched_stat_blocked/format
message SchedStatBlockedFormat {
    string comm = 1;
    int32 pid = 2;
    uint64 delay = 3;
}

// /sys/kernel/debug/tracing/events/sched/sched_stat_iowait/format
message SchedStatIowaitFormat {
    string comm = 1;
    int32 pid = 2;
    uint64 delay = 3;
}

// /sys/kernel/debug/tracing/events/sched/sched_stat_runtime/format
message SchedStatRuntimeFormat {
    string comm = 1;
    int32 pid = 2;
    uint64 runtime = 3;
    uint64 vruntime = 4;
}

// /sys/kernel/debug/tracing/events/sched/sched_stat_sleep/format
message SchedStatSleepFormat {
    string comm = 1;
    int32 pid = 2;
    uint64 delay = 3;
}

// /sys/kernel/debug/tracing/events/sched/sched_stat_wait/format
message SchedStatWaitFormat {
    string comm = 1;
    int32 pid = 2;
    uint64 delay = 3;
}

// /sys/kernel/debug/tracing/events/sched/sched_stick_numa/format
message SchedStickNumaFormat {
    int32 pid = 1;
    int32 tgid = 2;
    int32 ngid = 3;
    int32 src_cpu = 4;
    int32 src_nid = 5;
    int32 dst_cpu = 6;
    int32 dst_nid = 7;
}

// /sys/kernel/debug/tracing/events/sched/sched_swap_numa/format
message SchedSwapNumaFormat {
    int32 src_pid = 1;
    int32 src_tgid = 2;
    int32 src_ngid = 3;
    int32 src_cpu = 4;
    int32 src_nid = 5;
    int32 dst_pid = 6;
    int32 dst_tgid = 7;
    int32 dst_ngid = 8;
    int32 dst_cpu = 9;
    int32 dst_nid = 10;
}

// /sys/kernel/debug/tracing/events/sched/sched_switch/format
message SchedSwitchFormat {
    string prev_comm = 1;
    int32 prev_pid = 2;
    int32 prev_prio = 3;
    uint64 prev_state = 4;
    string next_comm = 5;
    int32 next_pid = 6;
    int32 next_prio = 7;
}

// /sys/kernel/debug/tracing/events/sched/sched_wait_task/format
message SchedWaitTaskFormat {
    string comm = 1;
    int32 pid = 2;
    int32 prio = 3;
}

// /sys/kernel/debug/tracing/events/sched/sched_wake_idle_without_ipi/format
message SchedWakeIdleWithoutIpiFormat {
    int32 cpu = 1;
}

// /sys/kernel/debug/tracing/events/sched/sched_wakeup/format
message SchedWakeupFormat {
    string comm = 1;
    int32 pid = 2;
    int32 prio = 3;
    int32 success = 4;
    int32 target_cpu = 5;
}

// /sys/kernel/debug/tracing/events/sched/sched_wakeup_new/format
message SchedWakeupNewFormat {
    string comm = 1;
    int32 pid = 2;
    int32 prio = 3;
    int32 success = 4;
    int32 target_cpu = 5;
}

// /sys/kernel/debug/tracing/events/sched/sched_waking/format
message SchedWakingFormat {
    string comm = 1;
    int32 pid = 2;
    int32 prio = 3;
    int32 success = 4;
    int32 target_cpu = 5;
}

