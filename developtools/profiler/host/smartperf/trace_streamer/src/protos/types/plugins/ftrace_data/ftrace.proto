// THIS FILE IS GENERATED BY ftrace_proto_generator.py, PLEASE DON'T EDIT IT!
// Copyright (c) 2021 Huawei Device Co., Ltd.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

option optimize_for = LITE_RUNTIME;

// category: ftrace
// /sys/kernel/debug/tracing/events/ftrace/bputs/format
message BputsFormat {
    uint64 ip = 1;
    string str = 2;
}

// /sys/kernel/debug/tracing/events/ftrace/branch/format
message BranchFormat {
    uint32 line = 1;
    string func = 2;
    string file = 3;
    uint32 correct = 4;
    uint32 constant = 5;
}

// /sys/kernel/debug/tracing/events/ftrace/context_switch/format
message ContextSwitchFormat {
    uint32 prev_pid = 1;
    uint32 next_pid = 2;
    uint32 next_cpu = 3;
    uint32 prev_prio = 4;
    uint32 prev_state = 5;
    uint32 next_prio = 6;
    uint32 next_state = 7;
}

// /sys/kernel/debug/tracing/events/ftrace/funcgraph_entry/format
message FuncgraphEntryFormat {
    uint64 func = 1;
    int32 depth = 2;
}

// /sys/kernel/debug/tracing/events/ftrace/funcgraph_exit/format
message FuncgraphExitFormat {
    uint64 func = 1;
    uint64 calltime = 2;
    uint64 rettime = 3;
    uint64 overrun = 4;
    int32 depth = 5;
}

// /sys/kernel/debug/tracing/events/ftrace/function/format
message FunctionFormat {
    uint64 ip = 1;
    uint64 parent_ip = 2;
}

// /sys/kernel/debug/tracing/events/ftrace/kernel_stack/format
message KernelStackFormat {
    int32 size = 1;
    repeated uint64 caller = 2;
}

// /sys/kernel/debug/tracing/events/ftrace/mmiotrace_map/format
message MmiotraceMapFormat {
    uint64 phys = 1;
    uint64 virt = 2;
    uint64 len = 3;
    int32 map_id = 4;
    uint32 opcode = 5;
}

// /sys/kernel/debug/tracing/events/ftrace/mmiotrace_rw/format
message MmiotraceRwFormat {
    uint64 phys = 1;
    uint64 value = 2;
    uint64 pc = 3;
    int32 map_id = 4;
    uint32 opcode = 5;
    uint32 width = 6;
}

// /sys/kernel/debug/tracing/events/ftrace/print/format
message PrintFormat {
    uint64 ip = 1;
    string buf = 2;
}

// /sys/kernel/debug/tracing/events/ftrace/user_stack/format
message UserStackFormat {
    uint32 tgid = 1;
    repeated uint64 caller = 2;
}

// /sys/kernel/debug/tracing/events/ftrace/wakeup/format
message WakeupFormat {
    uint32 prev_pid = 1;
    uint32 next_pid = 2;
    uint32 next_cpu = 3;
    uint32 prev_prio = 4;
    uint32 prev_state = 5;
    uint32 next_prio = 6;
    uint32 next_state = 7;
}

