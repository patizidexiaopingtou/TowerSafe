// THIS FILE IS GENERATED BY ftrace_proto_generator.py, PLEASE DON'T EDIT IT!
// Copyright (c) 2021 Huawei Device Co., Ltd.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

option optimize_for = LITE_RUNTIME;

// category: sunrpc
// /sys/kernel/debug/tracing/events/sunrpc/rpc_bind_status/format
message RpcBindStatusFormat {
    uint32 task_id = 1;
    uint32 client_id = 2;
    int32 status = 3;
}

// /sys/kernel/debug/tracing/events/sunrpc/rpc_call_status/format
message RpcCallStatusFormat {
    uint32 task_id = 1;
    uint32 client_id = 2;
    int32 status = 3;
}

// /sys/kernel/debug/tracing/events/sunrpc/rpc_connect_status/format
message RpcConnectStatusFormat {
    uint32 task_id = 1;
    uint32 client_id = 2;
    int32 status = 3;
}

// /sys/kernel/debug/tracing/events/sunrpc/rpc_socket_close/format
message RpcSocketCloseFormat {
    uint32 socket_state = 1;
    uint32 sock_state = 2;
    uint64 ino = 3;
    string dstaddr = 4;
    string dstport = 5;
}

// /sys/kernel/debug/tracing/events/sunrpc/rpc_socket_connect/format
message RpcSocketConnectFormat {
    int32 error = 1;
    uint32 socket_state = 2;
    uint32 sock_state = 3;
    uint64 ino = 4;
    string dstaddr = 5;
    string dstport = 6;
}

// /sys/kernel/debug/tracing/events/sunrpc/rpc_socket_error/format
message RpcSocketErrorFormat {
    int32 error = 1;
    uint32 socket_state = 2;
    uint32 sock_state = 3;
    uint64 ino = 4;
    string dstaddr = 5;
    string dstport = 6;
}

// /sys/kernel/debug/tracing/events/sunrpc/rpc_socket_reset_connection/format
message RpcSocketResetConnectionFormat {
    int32 error = 1;
    uint32 socket_state = 2;
    uint32 sock_state = 3;
    uint64 ino = 4;
    string dstaddr = 5;
    string dstport = 6;
}

// /sys/kernel/debug/tracing/events/sunrpc/rpc_socket_shutdown/format
message RpcSocketShutdownFormat {
    uint32 socket_state = 1;
    uint32 sock_state = 2;
    uint64 ino = 3;
    string dstaddr = 4;
    string dstport = 5;
}

// /sys/kernel/debug/tracing/events/sunrpc/rpc_socket_state_change/format
message RpcSocketStateChangeFormat {
    uint32 socket_state = 1;
    uint32 sock_state = 2;
    uint64 ino = 3;
    string dstaddr = 4;
    string dstport = 5;
}

// /sys/kernel/debug/tracing/events/sunrpc/rpc_task_begin/format
message RpcTaskBeginFormat {
    uint32 task_id = 1;
    uint32 client_id = 2;
    uint64 action = 3;
    uint64 runstate = 4;
    int32 status = 5;
    uint32 flags = 6;
}

// /sys/kernel/debug/tracing/events/sunrpc/rpc_task_complete/format
message RpcTaskCompleteFormat {
    uint32 task_id = 1;
    uint32 client_id = 2;
    uint64 action = 3;
    uint64 runstate = 4;
    int32 status = 5;
    uint32 flags = 6;
}

// /sys/kernel/debug/tracing/events/sunrpc/rpc_task_run_action/format
message RpcTaskRunActionFormat {
    uint32 task_id = 1;
    uint32 client_id = 2;
    uint64 action = 3;
    uint64 runstate = 4;
    int32 status = 5;
    uint32 flags = 6;
}

// /sys/kernel/debug/tracing/events/sunrpc/rpc_task_sleep/format
message RpcTaskSleepFormat {
    uint32 task_id = 1;
    uint32 client_id = 2;
    uint64 timeout = 3;
    uint64 runstate = 4;
    int32 status = 5;
    uint32 flags = 6;
    string q_name = 7;
}

// /sys/kernel/debug/tracing/events/sunrpc/rpc_task_wakeup/format
message RpcTaskWakeupFormat {
    uint32 task_id = 1;
    uint32 client_id = 2;
    uint64 timeout = 3;
    uint64 runstate = 4;
    int32 status = 5;
    uint32 flags = 6;
    string q_name = 7;
}

// /sys/kernel/debug/tracing/events/sunrpc/svc_handle_xprt/format
message SvcHandleXprtFormat {
    uint64 xprt = 1;
    int32 len = 2;
    uint64 flags = 3;
    string addr = 4;
}

// /sys/kernel/debug/tracing/events/sunrpc/svc_process/format
message SvcProcessFormat {
    uint32 xid = 1;
    uint32 vers = 2;
    uint32 proc = 3;
    string service = 4;
    string addr = 5;
}

// /sys/kernel/debug/tracing/events/sunrpc/svc_recv/format
message SvcRecvFormat {
    uint32 xid = 1;
    int32 len = 2;
    uint64 flags = 3;
    string addr = 4;
}

// /sys/kernel/debug/tracing/events/sunrpc/svc_send/format
message SvcSendFormat {
    uint32 xid = 1;
    int32 status = 2;
    uint64 flags = 3;
    string addr = 4;
}

// /sys/kernel/debug/tracing/events/sunrpc/svc_wake_up/format
message SvcWakeUpFormat {
    int32 pid = 1;
}

// /sys/kernel/debug/tracing/events/sunrpc/svc_xprt_dequeue/format
message SvcXprtDequeueFormat {
    uint64 xprt = 1;
    uint64 flags = 2;
    uint64 wakeup = 3;
    string addr = 4;
}

// /sys/kernel/debug/tracing/events/sunrpc/svc_xprt_do_enqueue/format
message SvcXprtDoEnqueueFormat {
    uint64 xprt = 1;
    int32 pid = 2;
    uint64 flags = 3;
    string addr = 4;
}

// /sys/kernel/debug/tracing/events/sunrpc/xprt_complete_rqst/format
message XprtCompleteRqstFormat {
    uint32 xid = 1;
    int32 status = 2;
    string addr = 3;
    string port = 4;
}

// /sys/kernel/debug/tracing/events/sunrpc/xprt_lookup_rqst/format
message XprtLookupRqstFormat {
    uint32 xid = 1;
    int32 status = 2;
    string addr = 3;
    string port = 4;
}

// /sys/kernel/debug/tracing/events/sunrpc/xprt_transmit/format
message XprtTransmitFormat {
    uint32 xid = 1;
    int32 status = 2;
    string addr = 3;
    string port = 4;
}

// /sys/kernel/debug/tracing/events/sunrpc/xs_tcp_data_ready/format
message XsTcpDataReadyFormat {
    int32 err = 1;
    uint32 total = 2;
    string addr = 3;
    string port = 4;
}

// /sys/kernel/debug/tracing/events/sunrpc/xs_tcp_data_recv/format
message XsTcpDataRecvFormat {
    string addr = 1;
    string port = 2;
    uint32 xid = 3;
    uint64 flags = 4;
    uint64 copied = 5;
    uint32 reclen = 6;
    uint64 offset = 7;
}

